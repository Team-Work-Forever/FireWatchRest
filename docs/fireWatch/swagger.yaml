basePath: /api/v1
definitions:
  contracts.AddressResponse:
    properties:
      city:
        type: string
      number:
        type: integer
      street:
        type: string
      zip_code:
        $ref: '#/definitions/contracts.ZipCodeResponse'
    type: object
  contracts.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  contracts.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  contracts.PhoneResponse:
    properties:
      country_code:
        type: string
      number:
        type: string
    type: object
  contracts.ProfileResponse:
    properties:
      address:
        $ref: '#/definitions/contracts.AddressResponse'
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        $ref: '#/definitions/contracts.PhoneResponse'
      user_type:
        type: string
    type: object
  contracts.ResetPasswordRequest:
    properties:
      confirm_password:
        type: string
      password:
        type: string
    required:
    - confirm_password
    - password
    type: object
  contracts.ZipCodeResponse:
    properties:
      value:
        type: string
    type: object
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is the api for Fire Watch Mobile Application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FireWatch API
  version: "1.0"
paths:
  /auth/forgot_password:
    get:
      parameters:
      - description: Email address associated with the account
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Request a Password Reset
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/contracts.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contracts.AuthResponse'
      summary: Authenticate with account
      tags:
      - Auth
  /auth/refresh_tokens:
    get:
      consumes:
      - application/json
      parameters:
      - description: JWT token to be refreshed
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contracts.AuthResponse'
      summary: Refresh Tokens
      tags:
      - Auth
  /auth/reset_password:
    post:
      consumes:
      - application/json
      parameters:
      - description: A unique token sent to the user's email for password reset
        in: query
        name: forgot_token
        required: true
        type: string
      - description: Reset Password Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/contracts.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            type: string
      summary: Reset Password
      tags:
      - Auth
  /auth/signUp:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: city
        required: true
        type: string
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: first_name
        required: true
        type: string
      - in: formData
        name: last_name
        required: true
        type: string
      - in: formData
        name: nif
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: phone_code
        required: true
        type: string
      - in: formData
        name: phone_number
        required: true
        type: string
      - in: formData
        name: street
        required: true
        type: string
      - in: formData
        name: street_port
        required: true
        type: integer
      - in: formData
        name: zip_code
        required: true
        type: string
      - description: User avatar
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contracts.AuthResponse'
      summary: Create an Account
      tags:
      - Auth
  /whoami:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contracts.ProfileResponse'
      security:
      - Bearer: []
      summary: Fetch Profile Information
      tags:
      - Profile
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
